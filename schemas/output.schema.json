{
  "meta:license": [
    "Copyright (c) 2020, Triad National Security, LLC.",
    "This code is provided under a BSD license as part of the Multi-Infrastructure Control",
    "and Optimization Toolkit (MICOT) project, LA-CC-13-108.",
    "You may not use this file except in compliance with the License. You may obtain a copy",
    "of the License at https://github.com/lanl-ansi/PowerModelsONM.jl/blob/main/LICENSE.md"
  ],
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "schemas/outputs",
  "type": "object",
  "title": "Outputs",
  "x-tags": ["output"],
  "description": "This is the schema for the output statistics and analytics from the ONM workflow using [`entrypoint`](@ref entrypoint) and [`analyze_results!`](@ref analyze_results!)",
  "additionalProperties": false,
  "examples": [
    {
      "Events": [
        {
          "event_data": {
            "status": 1,
            "dispatchable": false,
            "type": "breaker",
            "state": "open"
          },
          "timestep": 1,
          "affected_asset": "line.671700",
          "event_type": "switch"
        }
      ],
      "Generator profiles": {
        "Diesel DG (kW)": [0, 0, 0],
        "Energy storage (kW)": [0, 0, 0],
        "Solar DG (kW)": [200, 175, 100],
        "Grid mix (kW)": [1750, 2000, 3000]
      },
      "Fault currents": [
        {
          "701_lg_1": {
            "fault": {
              "susceptance (S)": [
                [0, 0],
                [0, 0]
              ],
              "connections": [1, 4],
              "conductance (S)": [
                [100, -100],
                [-100, 100]
              ],
              "bus": "701",
              "type": "lg"
            },
            "switch": {
              "671692": {
                "|I| (A)": null,
                "|I2| (A)": 0.8,
                "|I0| (A)": 1.2,
                "|I1| (A)": 90.1,
                "|V| (V)": [2.5, 2.5, 2.5]
              }
            }
          }
        }
      ],
      "Runtime timestamp": "2021-01-01T00:00:00.000",
      "Switch changes": [[], ["671700"], ["701702"]],
      "Runtime arguments": {
        "events": "../test/data/ieee13_events.json",
        "faults": "../test/data/ieee13_faults.json",
        "voltage-angle-difference": 5,
        "network": "../test/data/ieee13_feeder.dss",
        "settings": "../test/data/ieee13_settings.json",
        "voltage-lower-bound": 0.8,
        "quiet": true,
        "inverters": "../test/data/ieee13_inverters.json",
        "max-switch-actions": 1,
        "voltage-upper-bound": 1.2
      },
      "Simulation time steps": [1, 2, 3],
      "Voltages": {
        "Min voltage (p.u.)": [1, 1, 1],
        "Max voltage (p.u.)": [1.2, 1, 1.1],
        "Mean voltage (p.u.)": [1.1, 1, 1]
      },
      "Additional statistics": {},
      "Storage SOC (%)": [null, null, null],
      "Powerflow output": [
        {
          "voltage_source": {
            "source": {
              "real power setpoint (kW)": [
                581.8173560045832, 468.8619242602074, 708.8039492196247
              ],
              "reactive power setpoint (kVar)": [
                244.09972136399347, 32.25338488759224, 40.35427973972425
              ]
            }
          },
          "solar": {
            "pv1": {
              "real power setpoint (kW)": [
                64.49371884320102, 64.507863885424, 64.49849984139108
              ],
              "reactive power setpoint (kVar)": [
                41.23181415943054, 41.23340639500285, 41.23312440672468
              ]
            }
          },
          "bus": {
            "611": {
              "voltage (V)": [2.5217499128997907]
            }
          }
        }
      ],
      "Small signal stable": [false, false, false],
      "Load served": {
        "Bonus load via microgrid (%)": [0, 0, 0],
        "Feeder load (%)": [85.8, 91.2, 96.7],
        "Microgrid load (%)": [9.4, 9, 3.2]
      },
      "Device action timeline": [
        {
          "Shedded loads": ["701", "700"],
          "Switch configurations": {
            "671692": "closed",
            "671700": "open",
            "701702": "open"
          }
        },
        {
          "Shedded loads": [],
          "Switch configurations": {
            "671692": "closed",
            "671700": "closed",
            "701702": "open"
          }
        },
        {
          "Shedded loads": [],
          "Switch configurations": {
            "671692": "closed",
            "671700": "closed",
            "701702": "closed"
          }
        }
      ]
    }
  ],
  "properties": {
    "Runtime timestamp": {
      "type": "string",
      "description": "Time at which ONM algorithm was executed",
      "format": "date-time",
      "example": "2020-01-01T12:00:00.000",
      "default": "string(Dates.now())",
      "readOnly": true
    },
    "Simulation time steps": {
      "$ref": "./output-timesteps.schema.json"
    },
    "Load served": {
      "$ref": "./output-load_served.schema.json"
    },
    "Generator profiles": {
      "$ref": "./output-generator_profiles.schema.json"
    },
    "Voltages": {
      "$ref": "./output-voltages.schema.json"
    },
    "Storage SOC (%)": {
      "$ref": "./output-storage_soc.schema.json"
    },
    "Device action timeline": {
      "$ref": "./output-device_action_timeline.schema.json"
    },
    "Powerflow output": {
      "$ref": "./output-powerflow.schema.json"
    },
    "Additional statistics": {
      "$ref": "./output-additional_statistics.schema.json"
    },
    "Events": {
      "$ref": "./input-events.schema.json"
    },
    "Runtime arguments": {
      "$ref": "./input-runtime_arguments.schema.json"
    },
    "Fault currents": {
      "$ref": "./output-fault_currents.schema.json"
    },
    "Small signal stable": {
      "$ref": "./output-small_signal.schema.json"
    },
    "Switch changes": {
      "$ref": "./output-switch_changes.schema.json"
    },
    "Optimal switching metadata": {
      "description": "Results (not the solutions) from the optimal switching alogrithm, including information about the solver, solve time, mip_gap, etc. If opt-switch-algorithm=global is used, there will only be a single dict",
      "type": "array",
      "items": {
        "$ref": "./output-optimization_metadata.schema.json"
      }
    },
    "Optimal dispatch metadata": {
      "$ref": "./output-optimization_metadata.schema.json"
    },
    "Fault studies metadata": {
      "$ref": "./output-fault_study_metadata.schema.json"
    },
    "System metadata": {
      "$ref": "./output-system_metadata.schema.json"
    },
    "Protection settings": {
      "$ref": "./output-protection.schema.json"
    }
  },
  "required": [
    "Runtime timestamp",
    "Simulation time steps",
    "Load served",
    "Generator profiles",
    "Voltages",
    "Storage SOC (%)",
    "Device action timeline",
    "Powerflow output",
    "Switch changes",
    "System metadata",
    "Protection settings"
  ]
}
